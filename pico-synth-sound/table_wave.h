/**
 * \file table_wave.h
 * \author JunSotohigashi (c6h4ohcooc6h5@gmail.com)
 * \brief this wavetable normalized for int32
 * \version 0.1
 * \date 2024-07-20
 *
 *
 */

#ifndef TABLE_WAVE_H
#define TABLE_WAVE_H

#include "pico/stdlib.h"
#include "hardware/interp.h"

const int32_t wave_sine[256] = {0, 1608, 3216, 4821, 6424, 8022, 9616, 11204, 12785, 14359, 15924, 17479, 19024, 20557, 22078, 23586, 25079, 26557, 28020, 29465, 30893, 32302, 33692, 35061, 36409, 37736, 39039, 40319, 41575, 42806, 44011, 45189, 46340, 47464, 48558, 49624, 50659, 51664, 52638, 53580, 54490, 55367, 56211, 57021, 57797, 58537, 59243, 59913, 60546, 61144, 61704, 62227, 62713, 63161, 63571, 63943, 64276, 64570, 64826, 65042, 65219, 65357, 65456, 65515, 65535, 65515, 65456, 65357, 65219, 65042, 64826, 64570, 64276, 63943, 63571, 63161, 62713, 62227, 61704, 61144, 60546, 59913, 59243, 58537, 57797, 57021, 56211, 55367, 54490, 53580, 52638, 51664, 50659, 49624, 48558, 47464, 46340, 45189, 44011, 42806, 41575, 40319, 39039, 37736, 36409, 35061, 33692, 32302, 30893, 29465, 28020, 26557, 25079, 23586, 22078, 20557, 19024, 17479, 15924, 14359, 12785, 11204, 9616, 8022, 6424, 4821, 3216, 1608, 0, -1608, -3216, -4821, -6424, -8022, -9616, -11204, -12785, -14359, -15924, -17479, -19024, -20557, -22078, -23586, -25079, -26557, -28020, -29465, -30893, -32302, -33692, -35061, -36409, -37736, -39039, -40319, -41575, -42806, -44011, -45189, -46340, -47464, -48558, -49624, -50659, -51664, -52638, -53580, -54490, -55367, -56211, -57021, -57797, -58537, -59243, -59913, -60546, -61144, -61704, -62227, -62713, -63161, -63571, -63943, -64276, -64570, -64826, -65042, -65219, -65357, -65456, -65515, -65535, -65515, -65456, -65357, -65219, -65042, -64826, -64570, -64276, -63943, -63571, -63161, -62713, -62227, -61704, -61144, -60546, -59913, -59243, -58537, -57797, -57021, -56211, -55367, -54490, -53580, -52638, -51664, -50659, -49624, -48558, -47464, -46340, -45189, -44011, -42806, -41575, -40319, -39039, -37736, -36409, -35061, -33692, -32302, -30893, -29465, -28020, -26557, -25079, -23586, -22078, -20557, -19024, -17479, -15924, -14359, -12785, -11204, -9616, -8022, -6424, -4821, -3216, -1608};
const int32_t wave_triangle[256] = {0, 1024, 2048, 3072, 4096, 5120, 6144, 7168, 8192, 9216, 10240, 11264, 12288, 13312, 14336, 15360, 16384, 17408, 18432, 19456, 20480, 21504, 22528, 23552, 24576, 25600, 26624, 27648, 28672, 29696, 30720, 31744, 32768, 33791, 34815, 35839, 36863, 37887, 38911, 39935, 40959, 41983, 43007, 44031, 45055, 46079, 47103, 48127, 49151, 50175, 51199, 52223, 53247, 54271, 55295, 56319, 57343, 58367, 59391, 60415, 61439, 62463, 63487, 64511, 65535, 64511, 63487, 62463, 61439, 60415, 59391, 58367, 57343, 56319, 55295, 54271, 53247, 52223, 51199, 50175, 49151, 48127, 47103, 46079, 45055, 44031, 43007, 41983, 40959, 39935, 38911, 37887, 36863, 35839, 34815, 33791, 32768, 31744, 30720, 29696, 28672, 27648, 26624, 25600, 24576, 23552, 22528, 21504, 20480, 19456, 18432, 17408, 16384, 15360, 14336, 13312, 12288, 11264, 10240, 9216, 8192, 7168, 6144, 5120, 4096, 3072, 2048, 1024, 0, -1024, -2048, -3072, -4096, -5120, -6144, -7168, -8192, -9216, -10240, -11264, -12288, -13312, -14336, -15360, -16384, -17408, -18432, -19456, -20480, -21504, -22528, -23552, -24576, -25600, -26624, -27648, -28672, -29696, -30720, -31744, -32768, -33791, -34815, -35839, -36863, -37887, -38911, -39935, -40959, -41983, -43007, -44031, -45055, -46079, -47103, -48127, -49151, -50175, -51199, -52223, -53247, -54271, -55295, -56319, -57343, -58367, -59391, -60415, -61439, -62463, -63487, -64511, -65535, -64511, -63487, -62463, -61439, -60415, -59391, -58367, -57343, -56319, -55295, -54271, -53247, -52223, -51199, -50175, -49151, -48127, -47103, -46079, -45055, -44031, -43007, -41983, -40959, -39935, -38911, -37887, -36863, -35839, -34815, -33791, -32768, -31744, -30720, -29696, -28672, -27648, -26624, -25600, -24576, -23552, -22528, -21504, -20480, -19456, -18432, -17408, -16384, -15360, -14336, -13312, -12288, -11264, -10240, -9216, -8192, -7168, -6144, -5120, -4096, -3072, -2048, -1024};
const int32_t wave_saw[256] = {0, 512, 1024, 1536, 2048, 2560, 3072, 3584, 4096, 4608, 5120, 5632, 6144, 6656, 7168, 7680, 8192, 8704, 9216, 9728, 10240, 10752, 11264, 11776, 12288, 12800, 13312, 13824, 14336, 14848, 15360, 15872, 16384, 16896, 17408, 17920, 18432, 18944, 19456, 19968, 20480, 20992, 21504, 22016, 22528, 23040, 23552, 24064, 24576, 25088, 25600, 26112, 26624, 27136, 27648, 28160, 28672, 29184, 29696, 30208, 30720, 31232, 31744, 32256, 32768, 33279, 33791, 34303, 34815, 35327, 35839, 36351, 36863, 37375, 37887, 38399, 38911, 39423, 39935, 40447, 40959, 41471, 41983, 42495, 43007, 43519, 44031, 44543, 45055, 45567, 46079, 46591, 47103, 47615, 48127, 48639, 49151, 49663, 50175, 50687, 51199, 51711, 52223, 52735, 53247, 53759, 54271, 54783, 55295, 55807, 56319, 56831, 57343, 57855, 58367, 58879, 59391, 59903, 60415, 60927, 61439, 61951, 62463, 62975, 63487, 63999, 64511, 65023, -65535, -65023, -64511, -63999, -63487, -62975, -62463, -61951, -61439, -60927, -60415, -59903, -59391, -58879, -58367, -57855, -57343, -56831, -56319, -55807, -55295, -54783, -54271, -53759, -53247, -52735, -52223, -51711, -51199, -50687, -50175, -49663, -49151, -48639, -48127, -47615, -47103, -46591, -46079, -45567, -45055, -44543, -44031, -43519, -43007, -42495, -41983, -41471, -40959, -40447, -39935, -39423, -38911, -38399, -37887, -37375, -36863, -36351, -35839, -35327, -34815, -34303, -33791, -33279, -32768, -32256, -31744, -31232, -30720, -30208, -29696, -29184, -28672, -28160, -27648, -27136, -26624, -26112, -25600, -25088, -24576, -24064, -23552, -23040, -22528, -22016, -21504, -20992, -20480, -19968, -19456, -18944, -18432, -17920, -17408, -16896, -16384, -15872, -15360, -14848, -14336, -13824, -13312, -12800, -12288, -11776, -11264, -10752, -10240, -9728, -9216, -8704, -8192, -7680, -7168, -6656, -6144, -5632, -5120, -4608, -4096, -3584, -3072, -2560, -2048, -1536, -1024, -512};

int32_t get_wave(const int32_t wave[256], uint16_t index)
{
    interp0->base[0] = wave[index >> 8];
    interp0->base[1] = wave[(index + 1) >> 8];
    interp0->accum[1] = index & 0xFF;
    return interp0->peek[1];
}

#endif